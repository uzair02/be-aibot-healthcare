"""initial migration tables

Revision ID: 67fab7c682ed
Revises: 
Create Date: 2024-10-12 16:19:23.437012

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '67fab7c682ed'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_admins_username'), 'admins', ['username'], unique=True)
    op.create_table('doctors',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('specialization', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(length=11), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_doctors_username'), 'doctors', ['username'], unique=True)
    op.create_table('patients',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(length=11), nullable=False),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_patients_username'), 'patients', ['username'], unique=True)
    op.create_table('appointment',
    sa.Column('appointment_id', sa.UUID(), nullable=False),
    sa.Column('appointment_date', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('doctor_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.user_id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.user_id'], ),
    sa.PrimaryKeyConstraint('appointment_id')
    )
    op.create_index(op.f('ix_appointment_appointment_id'), 'appointment', ['appointment_id'], unique=False)
    op.create_table('prescription',
    sa.Column('prescription_id', sa.UUID(), nullable=False),
    sa.Column('medication_name', sa.String(length=100), nullable=False),
    sa.Column('dosage', sa.String(length=50), nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('instructions', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('doctor_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('prescription_id')
    )
    op.create_index(op.f('ix_prescription_prescription_id'), 'prescription', ['prescription_id'], unique=False)
    op.create_table('time_slot',
    sa.Column('time_slot_id', sa.UUID(), nullable=False),
    sa.Column('doctor_id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.user_id'], ),
    sa.PrimaryKeyConstraint('time_slot_id')
    )
    op.create_index(op.f('ix_time_slot_time_slot_id'), 'time_slot', ['time_slot_id'], unique=False)
    op.create_table('reminder',
    sa.Column('reminder_id', sa.UUID(), nullable=False),
    sa.Column('prescription_id', sa.UUID(), nullable=False),
    sa.Column('reminder_time', sa.Time(), nullable=False),
    sa.Column('reminder_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescription.prescription_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('reminder_id')
    )
    op.create_index(op.f('ix_reminder_reminder_id'), 'reminder', ['reminder_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reminder_reminder_id'), table_name='reminder')
    op.drop_table('reminder')
    op.drop_index(op.f('ix_time_slot_time_slot_id'), table_name='time_slot')
    op.drop_table('time_slot')
    op.drop_index(op.f('ix_prescription_prescription_id'), table_name='prescription')
    op.drop_table('prescription')
    op.drop_index(op.f('ix_appointment_appointment_id'), table_name='appointment')
    op.drop_table('appointment')
    op.drop_index(op.f('ix_patients_username'), table_name='patients')
    op.drop_table('patients')
    op.drop_index(op.f('ix_doctors_username'), table_name='doctors')
    op.drop_table('doctors')
    op.drop_index(op.f('ix_admins_username'), table_name='admins')
    op.drop_table('admins')
    # ### end Alembic commands ###
